
# Include our external MCUs
[include mcu-pi4.cfg]
[include mcu-rp2040.cfg]

# Include our web interfaces
[include mainsail.cfg]
[include fluidd.cfg]

# Include our print head options.
# Comment out the heads currently not in use.
[include configs/mutant-ender3v2.cfg]
#[include configs/mutant-biqu_h2_v2s.cfg]
#[include configs/mutant-laser-base.cfg]


[include macros/timelapse.cfg]
[include macros/get_probe_limits.cfg]
[include macros/btt_smart_filament_sensor_macros.cfg]
[include macros/macros_pause_resume.cfg]
[include macros/macros_parking.cfg]
[include macros/macro_test_speed.cfg]
[include macros/macros_get_variable.cfg]

# [include shell_command.cfg]

[force_move] 
enable_force_move: true 

[respond]
default_type: echo
default_prefix: 

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_1A0045001950425938323120-if00
baud: 250000

[virtual_sdcard]
path: /home/stephenfeather/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

[idle_timeout]
# How long to wait in a PAUSE state before abandoning the print. Default is 10 minutes.
timeout: 3600	# One hour

#########################
######## tmc2209 ########
#########################
[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
#hold_current: 0.500
#stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
#hold_current: 0.500
#stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
#hold_current: 0.500
#stealthchop_threshold: 999999

######################
######## FANS ########
######################
[fan]
pin: PC6
max_power: 1.0
shutdown_speed: 0.0
cycle_time: 0.010
hardware_pwm: false
kick_start_time: 0.100
off_below:0.0

[heater_fan heatbreak_cooling_fan]
pin: PB15
max_power: 1.0
shutdown_speed: 0.0
cycle_time: 0.010
hardware_pwm: False
kick_start_time: 0.100
off_below: 0.0
heater: extruder
heater_temp: 35.0
fan_speed: 1.0

[controller_fan stepper_fan]
pin: PC7
max_power: 1.0
shutdown_speed: 0.0
cycle_time: 0.010
hardware_pwm: False
kick_start_time: 0.100
off_below: 0.0
stepper: stepper_x, stepper_y, stepper_z
fan_speed: 1.0


[include configs/bed.cfg]

#########################
######## SENSORS ######## 
#########################
[temperature_sensor SKR_Mini_E3_V2]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor Raspberry_Pi]
sensor_type: temperature_host
sensor_path: /sys/class/thermal/thermal_zone0/temp
min_temp: 10
max_temp: 100

[filament_motion_sensor runout]
pause_on_runout: false
detection_length: 14
extruder: extruder
switch_pin: PA9
runout_gcode: 
  RESPOND TYPE=error MSG="Filament Runout Triggered"
insert_gcode:
   RESPOND TYPE=error MSG="Filament Insert Triggered"
#event_delay:
pause_delay: 2


[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}

# Disable runout sensor during setup
  SFS_DISABLE

# Start bed heating
  M140 S{BED_TEMP}

  # Start hot-end heating
  M104 S{EXTRUDER_TEMP}
  
  

  # Use absolute coordinates
  G90

  # Home the printer
  RESPOND TYPE=error MSG="Homing..."
  _CG28
  
  
  
  # Reset the G-Code Z offset (adjust Z offset if needed)
  # SET_GCODE_OFFSET Z=0.0
  
  # TODO: Load mesh based upon BED_TEMP
  BED_MESH_PROFILE LOAD="default"
  
  # Reset the extruder
  G92 E0
  
  # Move the nozzle near the bed
  G1 Z5 F3000

  # Wait for bed to reach temperature
  RESPOND TYPE=error MSG="Waiting for bed to reach {BED_TEMP}C"
  RESPOND TYPE=error MSG="Waiting for hot end to reach {EXTRUDER_TEMP}C"
  M190 S{BED_TEMP}
  # Set and wait for nozzle to reach temperature
  
  M109 S{EXTRUDER_TEMP}

  SFS_ENABLE


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  SFS_DISABLE
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro END_PRINT]
gcode:
  SFS_DISABLE
  # Turn off bed, extruder, and fan
  M140 S0
  M104 S0
  M106 S0

  G1 Z199 F300
  G1 Y199 F300
  # Move nozzle away from print while retracting
  #G91
  #G1 X-2 Y-2 E-3 F300
  # Raise nozzle by 10mm
  #G1 Z20 F3000
  #G90
  # Disable steppers
  #M84


[gcode_macro TEST_STRIP]
description: Prints 2 test strips along the left side of the build plate
gcode:
  G1 Z15 ; raise the print head
  
  #G1 Z1.0 F3000                      ; Prepare head for first purge line
  G1 X25 Y3  F5000.0           ; Set head to first line start position
  G1 Z5 F750
  G1 E3 F1800
  RESPOND TYPE=error MSG="Printing First Line"
  G1 X25 Y3 Z0.20 F750.0 E60  ; First line
  G1 X190 Y4 Z0.20 F750.0    ; Move slightly on the side
  RESPOND TYPE=error MSG="Printing Second Line"
  G1 X190 Y4 Z0.20 F750.0  E+60       ; Second line
  RESPOND TYPE=error MSG="Printing Third Line"
  G1 X25 Y5 Z0.20 F750.0 
  G1 X190 Y5 Z0.20 F750.0 E+60
  #G1 E-3 F1800                       ; Filament Retract
  M82                                ; set absolute positioning for extruder
  #G92 E0                             ; Reset extrudeur
  G1 Z25.0 F3000                      ; Moving up slightly the nozzle
  END_PRINT

[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}


  
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[include moonraker_obico_macros.cfg]


